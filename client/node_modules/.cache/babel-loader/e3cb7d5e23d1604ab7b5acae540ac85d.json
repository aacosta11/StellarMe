{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\StellarMe\\\\client\\\\src\\\\api\\\\MakeNewKeysAPI.jsx\";\nimport axios from \"axios\";\nimport StellarSdk from \"stellar-sdk\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const {\n    response\n  } = props;\n  const server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\"); // pair.secret();\n  // pair.publicKey();\n  // console.log(pair.canSign());\n  // console.log('public: ')\n  // console.log(pair.publicKey());\n  // console.log('secret: ')\n  // console.log(pair.secret());\n\n  const request = () => {\n    const pair = StellarSdk.Keypair.random();\n    console.log(\"public key: \", pair.publicKey());\n    console.log(\"private key: \", pair.privateKey());\n    axios.get(`https://friendbot.stellar.org?addr=${encodeURIComponent(pair.publicKey())}`).then(res => {\n      console.log(\"SUCCESS! You have a new account :)\\n\", res.data);\n    }).catch(err => console.log(\"error while creating account, \", err));\n  };\n\n  const getTransactions = pubKey => {\n    server.transactions().forAccount(pubKey).call().then(function (r) {\n      console.log(r);\n    });\n  };\n\n  const handleClick = () => {\n    request(); // getTransactions();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: \"Make New Keys\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["C:/Users/acost/Desktop/StellarMe/client/src/api/MakeNewKeysAPI.jsx"],"names":["axios","StellarSdk","Button","props","response","server","Server","request","pair","Keypair","random","console","log","publicKey","privateKey","get","encodeURIComponent","then","res","data","catch","err","getTransactions","pubKey","transactions","forAccount","call","r","handleClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,gBAAeC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,MAAM,GAAG,IAAIJ,UAAU,CAACK,MAAf,CAAsB,qCAAtB,CAAf,CAFoB,CAIpB;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAGP,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,IAAI,CAACK,SAAL,EAA3B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BJ,IAAI,CAACM,UAAL,EAA5B;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAW,sCAAqCC,kBAAkB,CAC9DR,IAAI,CAACK,SAAL,EAD8D,CAEhE,EAFF,EAGKI,IAHL,CAGUC,GAAG,IAAI;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDM,GAAG,CAACC,IAAxD;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAIV,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CS,GAA9C,CANlB;AAOH,GAXD;;AAYA,QAAMC,eAAe,GAAGC,MAAM,IAAI;AAC9BlB,IAAAA,MAAM,CAACmB,YAAP,GACKC,UADL,CACgBF,MADhB,EAEKG,IAFL,GAEYT,IAFZ,CAEiB,UAAUU,CAAV,EAAa;AAAEhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,CAAZ;AAAiB,KAFjD;AAGH,GAJD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACtBrB,IAAAA,OAAO,GADe,CAEtB;AACH,GAHD;;AAKA,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEqB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArCD","sourcesContent":["import axios from \"axios\";\r\nimport StellarSdk from \"stellar-sdk\";\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nexport default props => {\r\n    const { response } = props;\r\n    const server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\");\r\n\r\n    // pair.secret();\r\n    // pair.publicKey();\r\n    \r\n    // console.log(pair.canSign());\r\n    // console.log('public: ')\r\n    // console.log(pair.publicKey());\r\n    // console.log('secret: ')\r\n    // console.log(pair.secret());\r\n    const request = () => {\r\n        const pair = StellarSdk.Keypair.random();\r\n        console.log(\"public key: \",pair.publicKey());\r\n        console.log(\"private key: \",pair.privateKey());\r\n        axios.get(`https://friendbot.stellar.org?addr=${encodeURIComponent(\r\n            pair.publicKey(),\r\n        )}`)\r\n            .then(res => {\r\n                console.log(\"SUCCESS! You have a new account :)\\n\", res.data)\r\n            })\r\n            .catch(err => console.log(\"error while creating account, \", err))\r\n    }\r\n    const getTransactions = pubKey => {\r\n        server.transactions()\r\n            .forAccount(pubKey)\r\n            .call().then(function (r) { console.log(r); });\r\n    }\r\n    const handleClick = () => {\r\n        request();\r\n        // getTransactions();\r\n    }\r\n\r\n    return <Button onClick={handleClick}>Make New Keys</Button>\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}