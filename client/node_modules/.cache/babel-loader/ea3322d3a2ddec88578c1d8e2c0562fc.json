{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport StellarSdk from \"stellar-sdk\";\nimport { useState } from \"react\";\nconst server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\");\nexport const generateTestKeyPair = () => {\n  _s();\n\n  const [newPair, setNewPair] = useState([]);\n  const pair = StellarSdk.Keypair.random();\n  console.log(pair); // pair.secret();\n  // pair.publicKey();\n  // console.log(pair.canSign());\n  // console.log('public: ')\n  // console.log(pair.publicKey());\n  // console.log('secret: ')\n  // console.log(pair.secret());\n\n  const request = () => {\n    axios.get(`https://friendbot.stellar.org?addr=${encodeURIComponent(pair.publicKey())}`).then(res => {\n      // setNewPair()\n      console.log(\"SUCCESS! You have a new account :)\\n\", res.data);\n    }).catch(err => console.log(\"error while creating account, \", err));\n  };\n\n  return [\"nada!\"];\n};\n\n_s(generateTestKeyPair, \"k76CnkS+JK6suRHfwZ2NglCsp78=\");\n\nexport const getTransactions = pubKey => {\n  server.transactions().forAccount(pubKey).call().then(function (r) {\n    console.log(r);\n  });\n};","map":{"version":3,"sources":["C:/Users/acost/Desktop/StellarMe/client/src/api/horizonAPI.jsx"],"names":["axios","StellarSdk","useState","server","Server","generateTestKeyPair","newPair","setNewPair","pair","Keypair","random","console","log","request","get","encodeURIComponent","publicKey","then","res","data","catch","err","getTransactions","pubKey","transactions","forAccount","call","r"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAMC,MAAM,GAAG,IAAIF,UAAU,CAACG,MAAf,CAAsB,qCAAtB,CAAf;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AACA,QAAMM,IAAI,GAAGP,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAHqC,CAIrC;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,OAAO,GAAG,MAAM;AAClBb,IAAAA,KAAK,CAACc,GAAN,CAAW,sCAAqCC,kBAAkB,CAC9DP,IAAI,CAACQ,SAAL,EAD8D,CAEhE,EAFF,EAGKC,IAHL,CAGUC,GAAG,IAAE;AACP;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDM,GAAG,CAACC,IAAxD;AAA8D,KALtE,EAMKC,KANL,CAMWC,GAAG,IAAEV,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CS,GAA9C,CANhB;AAOH,GARD;;AASA,SAAO,CAAC,OAAD,CAAP;AACH,CAvBM;;GAAMhB,mB;;AAyBb,OAAO,MAAMiB,eAAe,GAAGC,MAAM,IAAI;AACrCpB,EAAAA,MAAM,CAACqB,YAAP,GACHC,UADG,CACQF,MADR,EAEHG,IAFG,GAEIT,IAFJ,CAES,UAASU,CAAT,EAAW;AAAEhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,CAAZ;AAAiB,GAFvC;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\r\nimport StellarSdk from \"stellar-sdk\";\r\nimport { useState } from \"react\";\r\nconst server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\");\r\n\r\nexport const generateTestKeyPair = () => {\r\n    const [newPair,setNewPair] = useState([]);\r\n    const pair = StellarSdk.Keypair.random();\r\n    console.log(pair);\r\n    // pair.secret();\r\n    // pair.publicKey();\r\n\r\n    // console.log(pair.canSign());\r\n    // console.log('public: ')\r\n    // console.log(pair.publicKey());\r\n    // console.log('secret: ')\r\n    // console.log(pair.secret());\r\n\r\n    const request = () => {\r\n        axios.get(`https://friendbot.stellar.org?addr=${encodeURIComponent(\r\n            pair.publicKey(),\r\n        )}`)\r\n            .then(res=>{\r\n                // setNewPair()\r\n                console.log(\"SUCCESS! You have a new account :)\\n\", res.data)})\r\n            .catch(err=>console.log(\"error while creating account, \", err))\r\n    }\r\n    return [\"nada!\"]\r\n}\r\n\r\nexport const getTransactions = pubKey => {\r\n    server.transactions()\r\n.forAccount(pubKey)\r\n.call().then(function(r){ console.log(r); });\r\n}"]},"metadata":{},"sourceType":"module"}