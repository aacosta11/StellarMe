{"ast":null,"code":"import _slicedToArray from\"C:/Users/acost/Desktop/StellarMe/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Row from\"react-bootstrap/Row\";import Form from\"react-bootstrap/Form\";import{Formik}from\"formik\";import*as yup from'yup';import InputGroup from\"react-bootstrap/InputGroup\";import Button from\"react-bootstrap/Button\";import{Link}from\"react-router-dom\";import FormControl from\"react-bootstrap/FormControl\";import Col from\"react-bootstrap/Col\";import\"../../styles/compStyles/registerFormStyle.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default(function(props){var submit=props.submit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var schema=yup.object().shape({username:yup.string().required(),password:yup.string().required()});var handleSubmit=function handleSubmit(e){console.log(e);submit(\"submitted\");};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"formwrap\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Log In\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA0\"}),/*#__PURE__*/_jsx(Formik,{validationSchema:schema,onSubmit:function onSubmit(e){return handleSubmit(e);},initialValues:{username:'',password:''},children:function children(_ref){var handleSubmit=_ref.handleSubmit,handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,values=_ref.values,touched=_ref.touched,isValid=_ref.isValid,errors=_ref.errors;return/*#__PURE__*/_jsxs(Form,{noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationFormikUsername\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsxs(InputGroup,{hasValidation:true,children:[/*#__PURE__*/_jsx(InputGroup.Text,{id:\"inputGroupPrepend\",children:\"@\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Username\",\"aria-describedby\":\"inputGroupPrepend\",name:\"username\",value:values.username,onChange:handleChange,isInvalid:!!errors.username}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.username})]})]})}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"6\",controlId:\"validationFormik03\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Password\",name:\"password\",value:values.password,onChange:handleChange,isInvalid:!!errors.password}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.password}),/*#__PURE__*/_jsx(Form.Text,{id:\"passwordHelpBlock\",muted:true,children:\"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"})]})}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA0\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA0\"}),/*#__PURE__*/_jsx(Link,{to:\"/login/new\",children:\"Don't have an account?\"})]});}})]})});});","map":{"version":3,"sources":["C:/Users/acost/Desktop/StellarMe/client/src/components/loginpage/ExistingFormComp.jsx"],"names":["React","useState","Row","Form","Formik","yup","InputGroup","Button","Link","FormControl","Col","props","submit","user","setUser","schema","object","shape","username","string","required","password","handleSubmit","e","console","log","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const [user, setUser] = useState('');\r\n\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required(),\r\n        password: yup.string().required(),\r\n    });\r\n    const handleSubmit = e => {\r\n        console.log(e)\r\n        submit(\"submitted\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"formwrap\">\r\n                <h1>Log In</h1>\r\n                <p>&nbsp;</p>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                    }}>\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"username\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.username} />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                        Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                        must not contain spaces, special characters, or emoji.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <p>&nbsp;</p>\r\n                            <Button type=\"submit\">Submit</Button>\r\n                            <p>&nbsp;</p>\r\n                            <Link to=\"/login/new\">Don't have an account?</Link>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}