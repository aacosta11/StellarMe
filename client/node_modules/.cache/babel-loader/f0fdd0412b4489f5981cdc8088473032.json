{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\client\\\\src\\\\components\\\\loginpage\\\\ExistingFormComp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../styles/compStyles/registerFormStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const {\n    submit\n  } = props;\n  const [user, setUser] = useState('');\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required(),\n    username: yup.string().required(),\n    terms: yup.bool().required().oneOf([true], 'Terms must be accepted')\n  });\n\n  const handleSubmit = e => {\n    console.log(e);\n    submit(\"submitted\");\n  }; // const handleChange = e => {\n  //     console.log(e)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formwrap\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: e => handleSubmit(e),\n        initialValues: {\n          username: '',\n          terms: false\n        },\n        children: _ref => {\n          let {\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormikUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  hasValidation: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"inputGroupPrepend\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Username\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    name: \"username\",\n                    value: values.username,\n                    onChange: handleChange,\n                    isInvalid: !!errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: 3,\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    id: \"password\",\n                    placeholder: \"Password\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  id: \"passwordHelpBlock\",\n                  muted: true,\n                  children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"0P4GIOofXgAwhoFLvatnKVOv3Hg=\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/client/src/components/loginpage/ExistingFormComp.jsx"],"names":["React","useState","Row","Form","Formik","yup","InputGroup","Button","FormControl","Col","props","submit","user","setUser","schema","object","shape","firstName","string","required","lastName","email","username","terms","bool","oneOf","handleSubmit","e","console","log","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const [user,setUser] = useState('');\r\n\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().required(),\r\n        lastName: yup.string().required(),\r\n        email: yup.string().required(),\r\n        username: yup.string().required(),\r\n        terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n    });\r\n    const handleSubmit = e => {\r\n        console.log(e)\r\n        submit(\"submitted\");\r\n    }\r\n    // const handleChange = e => {\r\n    //     console.log(e)\r\n    // }\r\n    return (\r\n        <>\r\n            <div className=\"formwrap\">\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(e)=>handleSubmit(e)}\r\n                    initialValues={{\r\n                        username: '',\r\n                        terms: false,\r\n                    }}>\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                }) => (\r\n                    <Form noValidate onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <InputGroup hasValidation>\r\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                        aria-describedby=\"inputGroupPrepend\"\r\n                                        name=\"username\"\r\n                                        value={values.username}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.username}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.username}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row className=\"align-items-center\">\r\n                            <Col sm={3} className=\"my-1\">\r\n                            <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                <InputGroup>\r\n                                    <FormControl id=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                </InputGroup>\r\n                                <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                    Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                    must not contain spaces, special characters, or emoji.\r\n                                </Form.Text>\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}