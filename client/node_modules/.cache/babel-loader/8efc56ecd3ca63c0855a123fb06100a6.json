{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\StellarMe\\\\client\\\\src\\\\pages\\\\testnet\\\\TestnetDashPage.jsx\",\n    _s = $RefreshSig$();\n\nimport TestnetGetAccountAPI from \"../../api/TestNetGetAccountAPI\";\nimport NavBarComp from \"../../components/homepage/NavBarComp\";\nimport TestnetTransactAPI from \"../../api/TestnetTransactAPI\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport MakeNewKeysAPI from \"../../api/MakeNewKeysAPI.jsx\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport React, { useState } from \"react\";\nimport \"../../styles/pageStyles/testDashStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const [keyPair, setKeyPair] = useState({\n    'public': 'GC7XVS643FTWOKTFJGHPOUPG24CIVKHHB35WCPVPJEDNZRYCBN2MTC2W',\n    'private': ''\n  });\n  const [balance, setBalance] = useState('');\n  const [keyPair2, setKeyPair2] = useState({\n    'public': '',\n    'private': ''\n  });\n  const [balance2, setBalance2] = useState('');\n  const guest1 = 'guest982';\n  const guest2 = 'guest321';\n  const [slots, setSlots] = useState({\n    0: {\n      'name': '',\n      'public': '',\n      'private': '',\n      'balance': ''\n    },\n    1: {\n      'name': '',\n      'public': '',\n      'private': '',\n      'balance': ''\n    }\n  });\n\n  const generateNewKeys = res => {// setKeyPair({...res});\n  };\n\n  const generateNewKeys2 = res => {\n    setKeyPair2({ ...res\n    });\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault();\n  };\n\n  const handleAccountReport = res => {\n    setBalance(res);\n  };\n\n  const handleTransaction = res => {\n    setBalance(Math.round((parseFloat(balance) + parseFloat(res)) * 100 / 100).toFixed(7));\n  };\n\n  const handleSwapPos = () => {\n    if (slots[0].name === guest1) {\n      setSlots({\n        0: {\n          'name': guest2,\n          'public': keyPair2.public,\n          'private': keyPair2.private,\n          1: {\n            'name': guest1,\n            'public': keyPair.public,\n            'private': keyPair.private\n          }\n        }\n      });\n    } else {\n      setSlots({\n        0: {\n          'name': guest1,\n          'public': keyPair.public,\n          'private': keyPair.private\n        }\n      });\n      setSlots({ ...slots,\n        1: {\n          'name': guest2,\n          'public': keyPair2.public,\n          'private': keyPair.private\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testdashwrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testdashtopfill\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome, guest!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBarComp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testusercard testupdatecredentials\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Login (preview)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"username\",\n            label: \"Username\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingInput\",\n            label: \"Email address\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"name@example.com\",\n              className: \"testlogininput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addresses testusercard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Here's your testnet key pair:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"public: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), keyPair.public.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testkey\",\n          children: keyPair.public\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"private: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), keyPair.private.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testkey\",\n          children: keyPair.private\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MakeNewKeysAPI, {\n          response: generateNewKeys,\n          className: \"newkeysplz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testusercard testnetaccountinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Balance for @guest982\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TestnetGetAccountAPI, {\n          pubKey: keyPair.public,\n          response: handleAccountReport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"XLM \", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"add 100 XML to your balance?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TestnetTransactAPI, {\n          reciever: keyPair.public,\n          response: handleTransaction,\n          amnt: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testusercard testnettransactpreview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Make A Trade!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-default\",\n            children: \"XLM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            \"aria-label\": \"Default\",\n            \"aria-describedby\": \"inputGroup-sizing-default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TestnetTransactAPI, {\n          reciever: slots[0].public,\n          response: handleTransaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr hr-b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"N6wuJp657fEsRRkb/4txpsNBr1Q=\");","map":{"version":3,"sources":["C:/Users/acost/Desktop/StellarMe/client/src/pages/testnet/TestnetDashPage.jsx"],"names":["TestnetGetAccountAPI","NavBarComp","TestnetTransactAPI","FloatingLabel","MakeNewKeysAPI","FormControl","InputGroup","Button","Form","React","useState","props","keyPair","setKeyPair","balance","setBalance","keyPair2","setKeyPair2","balance2","setBalance2","guest1","guest2","slots","setSlots","generateNewKeys","res","generateNewKeys2","handleUpdate","e","preventDefault","handleAccountReport","handleTransaction","Math","round","parseFloat","toFixed","handleSwapPos","name","public","private","length"],"mappings":"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","sourcesContent":["import TestnetGetAccountAPI from \"../../api/TestNetGetAccountAPI\";\r\nimport NavBarComp from \"../../components/homepage/NavBarComp\";\r\nimport TestnetTransactAPI from \"../../api/TestnetTransactAPI\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport MakeNewKeysAPI from \"../../api/MakeNewKeysAPI.jsx\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React, { useState } from \"react\";\r\nimport \"../../styles/pageStyles/testDashStyle.css\";\r\nexport default props => {\r\n    const [keyPair, setKeyPair] = useState({ 'public': 'GC7XVS643FTWOKTFJGHPOUPG24CIVKHHB35WCPVPJEDNZRYCBN2MTC2W', 'private': '' });\r\n    const [balance, setBalance] = useState('');\r\n    const [keyPair2,setKeyPair2] = useState({'public':'','private':''});\r\n    const [balance2, setBalance2] = useState('');\r\n    const guest1 = 'guest982';\r\n    const guest2 = 'guest321';\r\n    const [slots,setSlots] = useState({0:{'name':'','public':'','private':'','balance':''},1:{'name':'','public':'','private':'','balance':''},})\r\n\r\n    const generateNewKeys = (res) => {\r\n        // setKeyPair({...res});\r\n    }\r\n    const generateNewKeys2 = (res) => {\r\n        setKeyPair2({...res});\r\n    }\r\n    const handleUpdate = e => {\r\n        e.preventDefault();\r\n    }\r\n    const handleAccountReport = res => {\r\n        setBalance(res);\r\n    }\r\n    const handleTransaction = res => {\r\n        setBalance(Math.round(((parseFloat(balance) + parseFloat(res)) * 100) / 100).toFixed(7));\r\n    }\r\n    const handleSwapPos = () => {\r\n        if (slots[0].name === guest1) {\r\n            setSlots({0:{'name':guest2,'public':keyPair2.public,'private':keyPair2.private,\r\n            1:{'name':guest1,'public':keyPair.public,'private':keyPair.private}}})\r\n        } else {\r\n            setSlots({0:{'name':guest1,'public':keyPair.public,'private':keyPair.private}})\r\n            setSlots({...slots,1:{'name':guest2,'public':keyPair2.public,'private':keyPair.private}})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"testdashwrap\">\r\n                <div className=\"testdashtopfill\">\r\n                    <h1>Welcome, guest!</h1>\r\n                </div>\r\n                <NavBarComp />\r\n                <div className=\"testusercard testupdatecredentials\">\r\n                    <div className=\"hr hr-t\" />\r\n                    <h2>Update Login (preview)</h2>\r\n                    <Form onSubmit={handleUpdate}>\r\n                        <FloatingLabel controlId=\"username\" label=\"Username\" className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" />\r\n                        </FloatingLabel>\r\n                        <FloatingLabel\r\n                            controlId=\"floatingInput\"\r\n                            label=\"Email address\"\r\n                            className=\"mb-3\">\r\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" className=\"testlogininput\" />\r\n                        </FloatingLabel>\r\n                        <Button>Save Changes</Button>\r\n                    </Form>\r\n                    <div className=\"hr hr-b\" />\r\n                </div>\r\n                <div className=\"addresses testusercard\">\r\n                    <div className=\"hr hr-t\" />\r\n                    <h2>Here's your testnet key pair:</h2>\r\n                    {/* public */}\r\n                    <h6>public: </h6>\r\n                    {keyPair.public.length === 0 ?\r\n                        <p>&nbsp;</p>\r\n                        : <div className=\"testkey\">{keyPair.public}</div>}\r\n                    {/* private */}\r\n                    <h6>private: </h6>\r\n                    {keyPair.private.length === 0 ?\r\n                        <p>&nbsp;</p>\r\n                        : <div className=\"testkey\">{keyPair.private}</div>}\r\n                    <MakeNewKeysAPI response={generateNewKeys} className=\"newkeysplz\" />\r\n                    <div className=\"hr hr-b\" />\r\n                </div>\r\n                <div className=\"testusercard testnetaccountinfo\">\r\n                    <div className=\"hr hr-t\" />\r\n                    <h2>Balance for @guest982</h2>\r\n                    <TestnetGetAccountAPI pubKey={keyPair.public} response={handleAccountReport} />\r\n                    <div>XLM {balance}</div>\r\n                    <h3>add 100 XML to your balance?</h3>\r\n                    <TestnetTransactAPI reciever={keyPair.public} response={handleTransaction}\r\n                        amnt='100' />\r\n                    <div className=\"hr hr-b\" />\r\n                </div>\r\n                <div className=\"testusercard testnettransactpreview\">\r\n                    <div className=\"hr hr-t\" />\r\n                    <h2>Make A Trade!</h2>\r\n                    <div>{} Balance: {}</div>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">XLM</InputGroup.Text>\r\n                        <FormControl\r\n                            aria-label=\"Default\"\r\n                            aria-describedby=\"inputGroup-sizing-default\"/>\r\n                    </InputGroup>\r\n                    <div>{} Balance: {}</div>\r\n                    <TestnetTransactAPI reciever={slots[0].public} response={handleTransaction} />\r\n                    <div className=\"hr hr-b\" />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}