{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\client\\\\src\\\\components\\\\loginpage\\\\RegisterFormComp.jsx\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../styles/compStyles/registerFormStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const {\n    submit\n  } = props;\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required(),\n    username: yup.string().required(),\n    terms: yup.bool().required().oneOf([true], 'Terms must be accepted')\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.email.value);\n    submit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formwrap\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: schema // onSubmit={console.log}\n        ,\n        initialValues: {\n          firstName: 'Rod',\n          lastName: 'Wave',\n          email: '',\n          username: '',\n          terms: false\n        },\n        children: _ref => {\n          let {\n            // handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: e => handleSubmit(e),\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik01\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"First name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"firstName\",\n                  value: values.firstName,\n                  onChange: handleChange,\n                  isValid: touched.firstName && !errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: \"Looks good!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik02\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"lastName\",\n                  value: values.lastName,\n                  onChange: handleChange,\n                  isValid: touched.lastName && !errors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: \"Looks good!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormikUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  hasValidation: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"inputGroupPrepend\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Username\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    name: \"username\",\n                    value: values.username,\n                    onChange: handleChange,\n                    isInvalid: !!errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik03\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Email\",\n                  name: \"email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  isInvalid: !!errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  id: \"password\",\n                  placeholder: \"Password\",\n                  type: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                id: \"passwordHelpBlock\",\n                muted: true,\n                children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  required: true,\n                  name: \"terms\",\n                  label: \"Agree to terms and conditions\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.terms,\n                  feedback: errors.terms,\n                  feedbackType: \"invalid\",\n                  id: \"validationFormik0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n});","map":{"version":3,"sources":["C:/Users/acost/Desktop/client/src/components/loginpage/RegisterFormComp.jsx"],"names":["React","Row","Form","Formik","yup","InputGroup","Button","FormControl","Col","props","submit","schema","object","shape","firstName","string","required","lastName","email","username","terms","bool","oneOf","handleSubmit","e","preventDefault","console","log","target","value","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().required(),\r\n        lastName: yup.string().required(),\r\n        email: yup.string().required(),\r\n        username: yup.string().required(),\r\n        terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n    });\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(e.target.email.value)\r\n        submit()\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"formwrap\">\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    // onSubmit={console.log}\r\n                    initialValues={{\r\n                        firstName: 'Rod',\r\n                        lastName: 'Wave',\r\n                        email: '',\r\n                        username: '',\r\n                        terms: false,\r\n                    }}>\r\n                    {({\r\n                        // handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={e=>handleSubmit(e)}>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                                    <Form.Label>First name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        value={values.firstName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.firstName && !errors.firstName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                                    <Form.Label>Last name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        value={values.lastName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.lastName && !errors.lastName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"username\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.username} />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email\"\r\n                                        name=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.email} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                <InputGroup>\r\n                                    <FormControl id=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                </InputGroup>\r\n                                <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                    Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                    must not contain spaces, special characters, or emoji.\r\n                                </Form.Text>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        required\r\n                                        name=\"terms\"\r\n                                        label=\"Agree to terms and conditions\"\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.terms}\r\n                                        feedback={errors.terms}\r\n                                        feedbackType=\"invalid\"\r\n                                        id=\"validationFormik0\" />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Button type=\"submit\">Submit</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}