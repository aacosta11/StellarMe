{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import Row from\"react-bootstrap/Row\";import Form from\"react-bootstrap/Form\";import{Formik}from\"formik\";import*as yup from'yup';import InputGroup from\"react-bootstrap/InputGroup\";import Button from\"react-bootstrap/Button\";import FormControl from\"react-bootstrap/FormControl\";import Col from\"react-bootstrap/Col\";import\"../../styles/compStyles/registerFormStyle.css\";import{scryRenderedDOMComponentsWithClass}from\"react-dom/cjs/react-dom-test-utils.development\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default(function(props){var submit=props.submit;var schema=yup.object().shape({firstName:yup.string().required(),lastName:yup.string().required(),email:yup.string().required(),username:yup.string().required(),password:yup.string().required(),terms:yup.bool().required().oneOf([true],'Terms must be accepted')});var handleSubmit=function handleSubmit(e){console.log(e.email);submit('submitted');};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"formwrap\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA0\"}),/*#__PURE__*/_jsx(Formik,{validationSchema:schema,onSubmit:function onSubmit(e){return handleSubmit(e);},initialValues:{firstName:'Rod',lastName:'Wave',email:'',username:'',password:'',terms:false},children:function children(_ref){var handleSubmit=_ref.handleSubmit,handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,values=_ref.values,touched=_ref.touched,isValid=_ref.isValid,errors=_ref.errors;return/*#__PURE__*/_jsxs(Form,{noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationFormik01\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"First name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"firstName\",value:values.firstName,onChange:handleChange,isValid:touched.firstName&&!errors.firstName}),/*#__PURE__*/_jsx(Form.Control.Feedback,{children:\"Looks good!\"})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationFormik02\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Last name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"lastName\",value:values.lastName,onChange:handleChange,isValid:touched.lastName&&!errors.lastName}),/*#__PURE__*/_jsx(Form.Control.Feedback,{children:\"Looks good!\"})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationFormikUsername\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsxs(InputGroup,{hasValidation:true,children:[/*#__PURE__*/_jsx(InputGroup.Text,{id:\"inputGroupPrepend\",children:\"@\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Username\",\"aria-describedby\":\"inputGroupPrepend\",name:\"username\",value:values.username,onChange:handleChange,isInvalid:!!errors.username}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.username})]})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"6\",controlId:\"validationFormik03\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Email\",name:\"email\",value:values.email,onChange:handleChange,isInvalid:!!errors.email}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.email})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"6\",controlId:\"validationFormik03\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Password\",name:\"password\",value:values.password,onChange:handleChange,isInvalid:!!errors.password}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.password}),/*#__PURE__*/_jsx(Form.Text,{id:\"passwordHelpBlock\",muted:true,children:\"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"})]})}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{required:true,name:\"terms\",label:\"Agree to terms and conditions\",onChange:handleChange,isInvalid:!!errors.terms,feedback:errors.terms,feedbackType:\"invalid\",id:\"validationFormik0\"})})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA0\"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Already have an account?\"})]});}})]})});});","map":{"version":3,"sources":["C:/Users/acost/Desktop/StellarMe/client/src/components/loginpage/RegisterFormComp.jsx"],"names":["React","Link","Row","Form","Formik","yup","InputGroup","Button","FormControl","Col","scryRenderedDOMComponentsWithClass","props","submit","schema","object","shape","firstName","string","required","lastName","email","username","password","terms","bool","oneOf","handleSubmit","e","console","log","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\nimport { scryRenderedDOMComponentsWithClass } from \"react-dom/cjs/react-dom-test-utils.development\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().required(),\r\n        lastName: yup.string().required(),\r\n        email: yup.string().required(),\r\n        username: yup.string().required(),\r\n        password: yup.string().required(),\r\n        terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n    });\r\n    const handleSubmit = e => {\r\n        console.log(e.email)\r\n        submit('submitted')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"formwrap\">\r\n                <h1>Register</h1>\r\n                <p>&nbsp;</p>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    initialValues={{\r\n                        firstName: 'Rod',\r\n                        lastName: 'Wave',\r\n                        email: '',\r\n                        username: '',\r\n                        password: '',\r\n                        terms: false,\r\n                    }}>\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                                    <Form.Label>First name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        value={values.firstName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.firstName && !errors.firstName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                                    <Form.Label>Last name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        value={values.lastName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.lastName && !errors.lastName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"username\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.username} />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email\"\r\n                                        name=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.email} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                        Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                        must not contain spaces, special characters, or emoji.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        required\r\n                                        name=\"terms\"\r\n                                        label=\"Agree to terms and conditions\"\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.terms}\r\n                                        feedback={errors.terms}\r\n                                        feedbackType=\"invalid\"\r\n                                        id=\"validationFormik0\" />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Button type=\"submit\">Submit</Button>\r\n                            <p>&nbsp;</p>\r\n                            <Link to=\"/login\">Already have an account?</Link>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}