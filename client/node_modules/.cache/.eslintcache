[{"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\index.js":"1","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\App.js":"2","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\reportWebVitals.js":"3","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\NewUserPage.jsx":"4","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\HomePage.jsx":"5","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\LoginPage.jsx":"6","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\testnet\\TestnetDashPage.jsx":"7","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\SectionOneComp.jsx":"8","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\loginpage\\RegisterFormComp.jsx":"9","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\WelcomeComp.jsx":"10","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\NavBarComp.jsx":"11","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\Section2Comp.jsx":"12","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\Section3Comp.jsx":"13","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\loginpage\\ExistingFormComp.jsx":"14","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\makeNewKeysAPI.jsx":"15","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\MakeNewKeysAPI.jsx":"16","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestnetGetTransactionsComp.jsx":"17","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestNetGetAccountAPI.jsx":"18","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestnetTransactAPI.jsx":"19"},{"size":638,"mtime":1637103027246,"results":"20","hashOfConfig":"21"},{"size":892,"mtime":1637177404441,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1637096286999,"results":"23","hashOfConfig":"21"},{"size":426,"mtime":1637274986266,"results":"24","hashOfConfig":"21"},{"size":600,"mtime":1637110608200,"results":"25","hashOfConfig":"21"},{"size":384,"mtime":1637281443432,"results":"26","hashOfConfig":"21"},{"size":9389,"mtime":1637302149963,"results":"27","hashOfConfig":"21"},{"size":1492,"mtime":1637116656564,"results":"28","hashOfConfig":"21"},{"size":8045,"mtime":1637275098345,"results":"29","hashOfConfig":"21"},{"size":819,"mtime":1637124975863,"results":"30","hashOfConfig":"21"},{"size":2613,"mtime":1637217648503,"results":"31","hashOfConfig":"21"},{"size":423,"mtime":1637110432582,"results":"32","hashOfConfig":"21"},{"size":222,"mtime":1637110745293,"results":"33","hashOfConfig":"21"},{"size":4482,"mtime":1637275226937,"results":"34","hashOfConfig":"21"},{"size":1098,"mtime":1637177346406,"results":"35","hashOfConfig":"21"},{"size":1521,"mtime":1637302204768,"results":"36","hashOfConfig":"21"},{"size":563,"mtime":1637193493533,"results":"37","hashOfConfig":"21"},{"size":485,"mtime":1637195090549,"results":"38","hashOfConfig":"21"},{"size":2925,"mtime":1637296886703,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ishys7",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\index.js",[],["90","91"],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\App.js",[],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\reportWebVitals.js",[],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\NewUserPage.jsx",["92","93"],"import React from \"react\";\r\nimport RegisterFormComp from \"../components/loginpage/RegisterFormComp\";\r\nimport NavBarComp from \"../components/homepage/NavBarComp\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default props => {\r\n    const handleResponse = res => {\r\n        console.log(res)\r\n    }\r\n    return (\r\n        <>\r\n        <NavBarComp />\r\n        <RegisterFormComp submit={handleResponse}/>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\HomePage.jsx",["94"],"import React from \"react\";\r\nimport NavBarComp from \"../components/homepage/NavBarComp\";\r\nimport WelcomeComp from \"../components/homepage/WelcomeComp\";\r\nimport SectionOneComp from \"../components/homepage/SectionOneComp\";\r\nimport Section2Comp from \"../components/homepage/Section2Comp\";\r\nimport Section3Comp from \"../components/homepage/Section3Comp\";\r\nimport \"../styles/pageStyles/homeStyle.css\"\r\nexport default props => {\r\n    return (\r\n        <>\r\n        <NavBarComp />\r\n        <WelcomeComp />\r\n        <SectionOneComp /> \r\n        <Section2Comp />\r\n        <Section3Comp />\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\LoginPage.jsx",["95"],"import React from \"react\";\r\nimport ExistingFormComp from \"../components/loginpage/ExistingFormComp\";\r\nimport NavBarComp from \"../components/homepage/NavBarComp\";\r\nexport default props => {\r\n    const handleResponse = res => {\r\n        console.log(res)\r\n    }\r\n    return (\r\n        <>\r\n        <NavBarComp />\r\n        <ExistingFormComp submit={handleResponse}/>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\pages\\testnet\\TestnetDashPage.jsx",["96","97","98"],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\SectionOneComp.jsx",["99"],"import React from \"react\";\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport \"../../styles/compStyles/section1Style.css\";\r\nexport default props => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sec1container\">\r\n            <Carousel fade className=\"carousel1\">\r\n                <Carousel.Item>\r\n                    {/* img can go here */}\r\n                    <div className=\"carouselslide\"></div>\r\n                    <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    {/* img can go here */}\r\n                    <div className=\"carouselslide\"></div>\r\n                    <Carousel.Caption>\r\n                        <h3>Second slide label</h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <div className=\"carouselslide\"></div>\r\n                    <Carousel.Caption>\r\n                        <h3>Third slide label</h3>\r\n                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\loginpage\\RegisterFormComp.jsx",["100","101","102"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\nimport { scryRenderedDOMComponentsWithClass } from \"react-dom/cjs/react-dom-test-utils.development\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().required(),\r\n        lastName: yup.string().required(),\r\n        email: yup.string().required(),\r\n        username: yup.string().required(),\r\n        password: yup.string().required(),\r\n        terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n    });\r\n    const handleSubmit = e => {\r\n        console.log(e.email)\r\n        submit('submitted')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"formwrap\">\r\n                <h1>Register</h1>\r\n                <p>&nbsp;</p>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    initialValues={{\r\n                        firstName: 'Rod',\r\n                        lastName: 'Wave',\r\n                        email: '',\r\n                        username: '',\r\n                        password: '',\r\n                        terms: false,\r\n                    }}>\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                                    <Form.Label>First name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        value={values.firstName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.firstName && !errors.firstName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                                    <Form.Label>Last name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        value={values.lastName}\r\n                                        onChange={handleChange}\r\n                                        isValid={touched.lastName && !errors.lastName} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"username\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.username} />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email\"\r\n                                        name=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.email} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                        Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                        must not contain spaces, special characters, or emoji.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        required\r\n                                        name=\"terms\"\r\n                                        label=\"Agree to terms and conditions\"\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.terms}\r\n                                        feedback={errors.terms}\r\n                                        feedbackType=\"invalid\"\r\n                                        id=\"validationFormik0\" />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Button type=\"submit\">Submit</Button>\r\n                            <p>&nbsp;</p>\r\n                            <Link to=\"/login\">Already have an account?</Link>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\WelcomeComp.jsx",["103"],"import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"../../styles/compStyles/welcomeStyle.css\";\r\nexport default props => {\r\n    return (\r\n        <>\r\n            <div className=\"welcomewrap\">\r\n                <div className=\"welcomelogowrap\">\r\n                    <div style={{ \"height\": \"100px\", \"width\": \"100px\", \"border\": \"3px solid black\",\"backgroundColor\":\"grey\" }}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"welcomebtns\">\r\n                    <Button variant=\"primary\" size=\"md\">\r\n                        Get Started\r\n                    </Button>\r\n                    <Button variant=\"secondary\" size=\"md\">\r\n                        Learn More\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\NavBarComp.jsx",["104"],"import React, { useState } from \"react\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"../../styles/compStyles/navbar.css\";\r\nexport default props => {\r\n    const [show,setShow] = useState(false);\r\n    const navigate = useNavigate();\r\n    const handleMenuClick = () => {\r\n        setShow(!show);\r\n    }\r\n    const handleItemClick = e => {\r\n        console.log(e.target)\r\n        if (e.id === 'nav1'){\r\n            navigate('/home');\r\n        } \r\n        if (e.id === 'nav2') {\r\n            navigate('/login/new');\r\n        }\r\n        if (e.id === 'nav3') {\r\n            navigate('/login');\r\n        }\r\n        if (e.id === 'nav4') {\r\n            navigate('/preview');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"navbarwrap\">\r\n                <div className=\"topbar\"></div>\r\n                <button className=\"navdropdown dropdown\" onClick={handleMenuClick}>\r\n                    <div className=\"navtitlewrap\">\r\n                        {/* Navbar.Brand for icon */}\r\n                        <h1 className=\"navtitle\">StellarMe</h1>\r\n                    </div>\r\n                    {show ? \r\n                    <Dropdown.Menu show variant=\"dark\" className=\"dropmenu\" id=\"menu\">\r\n                        <Dropdown.Item eventKey=\"1\" id=\"nav1\" onClick={e=>handleItemClick(e.target)}>Home</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\" id=\"nav2\" onClick={e=>handleItemClick(e.target)}>Register</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\" id=\"nav3\" onClick={e=>handleItemClick(e.target)}>Login</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\" id=\"nav4\" onClick={e=>handleItemClick(e.target)}>Preview</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                    : \r\n                    <Dropdown.Menu variant=\"dark\" className=\"dropmenu\" id=\"menu\">\r\n                        <Dropdown.Item eventKey=\"1\" id=\"nav1\" onClick={e=>handleItemClick(e.target)}>Home</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\" id=\"nav2\" onClick={e=>handleItemClick(e.target)}>Register</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\" id=\"nav3\" onClick={e=>handleItemClick(e.target)}>Login</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\" id=\"nav4\" onClick={e=>handleItemClick(e.target)}>Preview</Dropdown.Item>\r\n                    </Dropdown.Menu>}\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\Section2Comp.jsx",["105"],"import React from \"react\";\r\nimport \"../../styles/compStyles/section2Style.css\";\r\nexport default props => {\r\n    return (\r\n        <>\r\n        <div className=\"sec2container\">\r\n            <p className=\"sec2text\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Ducimus possimus et eveniet, voluptates facilis minus corporis tempora.\r\n            </p>\r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\homepage\\Section3Comp.jsx",["106"],"import React from \"react\";\r\nimport \"../../styles/compStyles/section3Style.css\";\r\nexport default props => {\r\n    return (\r\n        <>\r\n        <div className=\"sec3container\">\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\components\\loginpage\\ExistingFormComp.jsx",["107","108","109","110"],"import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../styles/compStyles/registerFormStyle.css\";\r\n\r\nexport default props => {\r\n    const { submit } = props;\r\n    const [user, setUser] = useState('');\r\n\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required(),\r\n        password: yup.string().required(),\r\n    });\r\n    const handleSubmit = e => {\r\n        console.log(e)\r\n        submit(\"submitted\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"formwrap\">\r\n                <h1>Log In</h1>\r\n                <p>&nbsp;</p>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                    }}>\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                    }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"username\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.username} />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.username}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items-center\">\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                        Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                        must not contain spaces, special characters, or emoji.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <p>&nbsp;</p>\r\n                            <Button type=\"submit\">Submit</Button>\r\n                            <p>&nbsp;</p>\r\n                            <Link to=\"/login/new\">Don't have an account?</Link>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\makeNewKeysAPI.jsx",["111","112","113","114","115","116"],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\MakeNewKeysAPI.jsx",["117","118"],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestnetGetTransactionsComp.jsx",["119","120","121"],"C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestNetGetAccountAPI.jsx",["122"],"import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nconst TestnetGetAccountAPI = props => {\r\n    const { response, pubKey } = props;\r\n    useEffect(()=>{\r\n        axios.get(`https://horizon-testnet.stellar.org/accounts/${pubKey}`)\r\n            .then(res=>{\r\n                response(res.data.balances[0].balance)\r\n                console.log(res.data)})\r\n            .catch(err=>{console.log(err)})\r\n    },[pubKey])\r\n    return null\r\n}\r\nexport default TestnetGetAccountAPI;","C:\\Users\\acost\\Desktop\\StellarMe\\client\\src\\api\\TestnetTransactAPI.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":5,"column":1,"nodeType":"133","endLine":15,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":8,"column":1,"nodeType":"133","endLine":18,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":4,"column":1,"nodeType":"133","endLine":14,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":11,"column":1,"nodeType":"133","endLine":178,"endColumn":2},{"ruleId":"134","severity":1,"message":"135","line":33,"column":8,"nodeType":"136","endLine":33,"endColumn":17,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":39,"column":8,"nodeType":"136","endLine":39,"endColumn":18,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":1,"nodeType":"133","endLine":37,"endColumn":2},{"ruleId":"127","severity":1,"message":"140","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":19},{"ruleId":"127","severity":1,"message":"141","line":12,"column":10,"nodeType":"129","messageId":"130","endLine":12,"endColumn":44},{"ruleId":"131","severity":1,"message":"132","line":14,"column":1,"nodeType":"133","endLine":153,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":4,"column":1,"nodeType":"133","endLine":23,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":6,"column":1,"nodeType":"133","endLine":56,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":3,"column":1,"nodeType":"133","endLine":14,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":3,"column":1,"nodeType":"133","endLine":11,"endColumn":2},{"ruleId":"127","severity":1,"message":"140","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":13,"column":1,"nodeType":"133","endLine":96,"endColumn":2},{"ruleId":"127","severity":1,"message":"142","line":15,"column":12,"nodeType":"129","messageId":"130","endLine":15,"endColumn":16},{"ruleId":"127","severity":1,"message":"143","line":15,"column":18,"nodeType":"129","messageId":"130","endLine":15,"endColumn":25},{"ruleId":"144","severity":2,"message":"145","line":5,"column":16,"nodeType":"129","messageId":"146","endLine":5,"endColumn":35},{"ruleId":"127","severity":1,"message":"147","line":7,"column":12,"nodeType":"129","messageId":"130","endLine":7,"endColumn":19},{"ruleId":"127","severity":1,"message":"148","line":7,"column":20,"nodeType":"129","messageId":"130","endLine":7,"endColumn":30},{"ruleId":"149","severity":2,"message":"150","line":7,"column":34,"nodeType":"129","endLine":7,"endColumn":42},{"ruleId":"127","severity":1,"message":"151","line":19,"column":11,"nodeType":"129","messageId":"130","endLine":19,"endColumn":18},{"ruleId":"127","severity":1,"message":"152","line":29,"column":11,"nodeType":"129","messageId":"130","endLine":29,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":4,"column":1,"nodeType":"133","endLine":34,"endColumn":2},{"ruleId":"127","severity":1,"message":"153","line":6,"column":11,"nodeType":"129","messageId":"130","endLine":6,"endColumn":17},{"ruleId":"127","severity":1,"message":"154","line":4,"column":12,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"155","line":4,"column":17,"nodeType":"129","messageId":"130","endLine":4,"endColumn":24},{"ruleId":"134","severity":1,"message":"156","line":12,"column":8,"nodeType":"136","endLine":12,"endColumn":10,"suggestions":"157"},{"ruleId":"134","severity":1,"message":"158","line":11,"column":7,"nodeType":"136","endLine":11,"endColumn":15,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'keyPair.private', 'keyPair.public', and 'slots'. Either include them or remove the dependency array. You can also do a functional update 'setSlots(s => ...)' if you only need 'slots' in the 'setSlots' call.","ArrayExpression",["162"],"React Hook useEffect has missing dependencies: 'keyPair2.private', 'keyPair2.public', and 'slots'. Either include them or remove the dependency array. You can also do a functional update 'setSlots(s => ...)' if you only need 'slots' in the 'setSlots' call.",["163"],"'FormControl' is defined but never used.","'scryRenderedDOMComponentsWithClass' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-undef","'generateTestKeyPair' is not defined.","undef","'newPair' is assigned a value but never used.","'setNewPair' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"generateTestKeyPair\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'request' is assigned a value but never used.","'getTransactions' is assigned a value but never used.","'server' is assigned a value but never used.","'acct' is assigned a value but never used.","'setAcct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'server'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [balance, keyPair.private, keyPair.public, slots]",{"range":"174","text":"175"},"Update the dependencies array to be: [balance2, keyPair2.private, keyPair2.public, slots]",{"range":"176","text":"177"},"Update the dependencies array to be: [server]",{"range":"178","text":"179"},"Update the dependencies array to be: [pubKey, response]",{"range":"180","text":"181"},[2086,2095],"[balance, keyPair.private, keyPair.public, slots]",[2411,2421],"[balance2, keyPair2.private, keyPair2.public, slots]",[496,498],"[server]",[418,426],"[pubKey, response]"]